name: Build

on: 
  push:
    branches: 
      - '*'
      - '*/**'
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'SECURITY.md'
      - 'Acknowledgements.md'
      - 'config/metadata/**'
      - '.github/workflows/publish.yml'
      - '.github/workflows/check.yml'
      - 'tools/**'


jobs:
  selfhosted:
    concurrency: ${{ matrix.remote_host }}
    runs-on: [self-hosted, server]
    strategy:
      fail-fast: false
      matrix:
        include: 
        - remote_host: debian-11
          installer: deb
        - remote_host: debian-11-arm
          installer: deb
        - remote_host: debian-11-armhf
          installer: deb
        - remote_host: freebsd-13.1
          installer: freebsd
        - remote_host: freebsd-14
          installer: freebsd
        - remote_host: openbsd-7-5
          installer: openbsd
        
    steps:
    - name: Run remote build
      run: |
        "$RUNNER_TOOLS_PATH"/run-agent gh-${{ matrix.remote_host }} <<'EOF'
        set -e
        if [ ! -d work/wsdd-native ]; then
          git clone https://github.com/gershnik/wsdd-native.git work/wsdd-native
        fi
        cd work/wsdd-native
        git fetch --all
        git fetch -f --prune --tags
        git reset --hard ${{ github.sha }}
        if [[ '${{ matrix.installer }}' == 'freebsd' ]]; then
          mkdir -p out
          echo "::group::AMD64"
          [ -d "out/amd64" ] && tools/uncache out/amd64
          cmake -S . -B out/amd64 -DCMAKE_BUILD_TYPE=RelWithDebInfo 
          installers/freebsd/build.py . out/amd64
          echo "::endgroup::"

          echo "::group::ARM64"
          installers/freebsd/make-toolchain.py arm64 out/toolchain-arm64
          [ -d "out/arm64" ] && tools/uncache out/arm64
          cmake -S . -B out/arm64 -DCMAKE_TOOLCHAIN_FILE=out/toolchain-arm64/toolchain.cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo
          installers/freebsd/build.py --arch=aarch64 . out/arm64
          echo "::endgroup::"
        elif [[ '${{ matrix.installer }}' == 'openbsd' ]]; then
          [ -d "out" ] && tools/uncache out
          cmake -S . -B out -DCMAKE_BUILD_TYPE=RelWithDebInfo 
          installers/openbsd/build.py . out
        else
          [ -d "out" ] && tools/uncache out
          cmake -S . -B out -DCMAKE_BUILD_TYPE=RelWithDebInfo 
          installers/${{ matrix.installer }}/build.py --sign . out
        fi
        EOF

  mac:
    runs-on: macos-14
    env: 
      DEVELOPER_DIR: /Applications/Xcode_16.2.app
     
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Collect System Info
      id: system-info
      uses: kenchan0130/actions-system-info@master

    - name: Configure
      run: |
          [ -d "out" ] && tools/uncache out
          cmake -S . -B out \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            "-DCMAKE_OSX_ARCHITECTURES=x86_64;arm64" \
            -DCMAKE_IGNORE_PREFIX_PATH"=/opt/local \
            -DWSDDN_PREFER_SYSTEM_LIBXML2=ON

    - name: Build
      run: |     
        export SIGN_CERTIFICATE='${{ secrets.SIGN_CERTIFICATE }}'
        export SIGN_CERTIFICATE_PWD='${{ secrets.SIGN_CERTIFICATE_PWD }}'
        export KEYCHAIN_PWD='${{ secrets.KEYCHAIN_PWD }}'
        export NOTARIZE_USER='${{ secrets.NOTARIZE_USER }}'
        export NOTARIZE_PWD='${{ secrets.NOTARIZE_PWD }}'
        installers/mac/set-github-keychain

        installers/mac/build.py --sign . out





