# Contributor: Eugene Gershnik <gershnik@hotmail.com>
# Maintainer: Eugene Gershnik <gershnik@hotmail.com>
pkgname=wsdd-native
pkgver=1.21
pkgrel=1
pkgdesc="WS-Discovery Host Daemon"
url="https://github.com/gershnik/wsdd-native"
arch="all"
license="BSD-3-Clause"
depends="!wsdd"
makedepends="cmake>=3.25 ninja coreutils linux-headers libarchive-tools"
install="$pkgname.pre-install"
subpackages="$pkgname-doc $pkgname-openrc $pkgname-dbg"
source="
wsddn-v$pkgver.tgz::https://github.com/gershnik/wsdd-native/tarball/v$pkgver
argum-v2.6.tgz::https://github.com/gershnik/argum/tarball/v2.6
asio-1.30.2.tgz::https://downloads.sourceforge.net/asio/asio-1.30.2.tar.gz
fmt-11.2.0.tgz::https://github.com/fmtlib/fmt/tarball/11.2.0
isptr-v1.9.tgz::https://github.com/gershnik/intrusive_shared_ptr/tarball/v1.9
libxml2-v2.14.5.tgz::https://gitlab.gnome.org/GNOME/libxml2/-/archive/v2.14.5/libxml2-v2.14.5.tar.gz
modern-uuid-v1.8.tgz::https://github.com/gershnik/modern-uuid/tarball/v1.8
outcome-v2.2.12.tgz::https://github.com/ned14/outcome/tarball/v2.2.12
ptl-v1.7.tgz::https://github.com/gershnik/ptl/tarball/v1.7
spdlog-v1.15.3.tgz::https://github.com/gabime/spdlog/tarball/v1.15.3
sys_string-v2.20.tgz::https://github.com/gershnik/sys_string/tarball/v2.20
tomlplusplus-v3.4.0.tgz::https://github.com/marzer/tomlplusplus/tarball/v3.4.0
"

options="!check"

_unpack_source() {
	local name=$1
	local tgz=$2

	msg2 "Unpacking $tgz to $name"
	[ -d "$name" ] && rm -rf "$name"; mkdir -p "$name"
	bsdtar -C "$name" --strip-components=1 -xzf "$tgz"
}

unpack() {
	if [ -z "$force" ]; then
		verify
		initdcheck
	fi
	_unpack_source "$srcdir/wsddn" "$SRCDEST/wsddn-v$pkgver.tgz"
	_unpack_source "$srcdir/wsddn/external/argum" "$SRCDEST/argum-v2.6.tgz"
	_unpack_source "$srcdir/wsddn/external/asio" "$SRCDEST/asio-1.30.2.tgz"
	_unpack_source "$srcdir/wsddn/external/fmt" "$SRCDEST/fmt-11.2.0.tgz"
	_unpack_source "$srcdir/wsddn/external/isptr" "$SRCDEST/isptr-v1.9.tgz"
	_unpack_source "$srcdir/wsddn/external/libxml2" "$SRCDEST/libxml2-v2.14.5.tgz"
	_unpack_source "$srcdir/wsddn/external/modern-uuid" "$SRCDEST/modern-uuid-v1.8.tgz"
	_unpack_source "$srcdir/wsddn/external/outcome" "$SRCDEST/outcome-v2.2.12.tgz"
	_unpack_source "$srcdir/wsddn/external/ptl" "$SRCDEST/ptl-v1.7.tgz"
	_unpack_source "$srcdir/wsddn/external/spdlog" "$SRCDEST/spdlog-v1.15.3.tgz"
	_unpack_source "$srcdir/wsddn/external/sys_string" "$SRCDEST/sys_string-v2.20.tgz"
	_unpack_source "$srcdir/wsddn/external/tomlplusplus" "$SRCDEST/tomlplusplus-v3.4.0.tgz"
}

build() {
	cd "$srcdir"/wsddn
	cmake -S . -B out -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DFETCHCONTENT_FULLY_DISCONNECTED=ON \
		-DFETCHCONTENT_SOURCE_DIR_ARGUM=external/argum \
		-DFETCHCONTENT_SOURCE_DIR_ASIO=external/asio \
		-DFETCHCONTENT_SOURCE_DIR_FMT=external/fmt \
		-DFETCHCONTENT_SOURCE_DIR_ISPTR=external/isptr \
		-DFETCHCONTENT_SOURCE_DIR_LIBXML2=external/libxml2 \
		-DFETCHCONTENT_SOURCE_DIR_MODERN-UUID=external/modern-uuid \
		-DFETCHCONTENT_SOURCE_DIR_OUTCOME=external/outcome \
		-DFETCHCONTENT_SOURCE_DIR_PTL=external/ptl \
		-DFETCHCONTENT_SOURCE_DIR_SPDLOG=external/spdlog \
		-DFETCHCONTENT_SOURCE_DIR_SYS_STRING=external/sys_string \
		-DFETCHCONTENT_SOURCE_DIR_TOMLPLUSPLUS=external/tomlplusplus
	cmake --build out
	cp installers/wsddn.conf out/
	sed -i "s%{RELOAD_INSTRUCTIONS}%# sudo rc-service wsddn reload\n%g" out/wsddn.conf
	sed -i "s/{SAMPLE_IFACE_NAME}/eth0/g" out/wsddn.conf
}

package() {
	cd "$srcdir"/wsddn
	cmake --install out --prefix "$pkgdir"/usr
	install -Dm 0644 out/wsddn.conf "$pkgdir"/etc/wsddn.conf
	install -Dm 0644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
	install -Dm 0755 config/openrc/etc/init.d/wsddn "$pkgdir"/etc/init.d/wsddn
	install -Dm 0644 config/openrc/etc/logrotate.d/wsddn "$pkgdir"/etc/logrotate.d/wsddn
}
